name: Compile and Publish
on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Test
        run: |
          cargo test

  linux-amd64:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v3

      - name: Build
        run: |
          rustup target add x86_64-unknown-linux-gnu
          cargo build --release --target x86_64-unknown-linux-gnu

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}
          path: target/x86_64-unknown-linux-gnu/release/mach
          if-no-files-found: error
          retention-days: 1
      
  linux-arm64:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v3

      - name: Build
        run: |
          sudo apt-get install gcc-aarch64-linux-gnu
          rustup target add aarch64-unknown-linux-gnu
          cargo build \
            --release \
            --target aarch64-unknown-linux-gnu \
            --config target.aarch64-unknown-linux-gnu.linker=\"aarch64-linux-gnu-gcc\"
      
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}
          path: target/aarch64-unknown-linux-gnu/release/mach
          if-no-files-found: error
          retention-days: 1

  macos-amd64:
    runs-on: macos-13
    needs: [test]
    steps:
      - uses: actions/checkout@v3

      - name: Build
        run: |
          rustup target add x86_64-apple-darwin
          cargo build --release --target x86_64-apple-darwin

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}
          path: target/x86_64-apple-darwin/release/mach
          if-no-files-found: error
          retention-days: 1
      
  macos-arm64:
    runs-on: macos-13
    needs: [test]
    steps:
      - uses: actions/checkout@v3

      - name: Build
        run: |
          rustup target add aarch64-apple-darwin
          cargo build --release --target aarch64-apple-darwin

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}
          path: target/aarch64-apple-darwin/release/mach
          if-no-files-found: error
          retention-days: 1

  windows-amd64:
    runs-on: windows-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v3

      - name: Build
        run: |
          rustup target add x86_64-pc-windows-msvc
          cargo build --release --target x86_64-pc-windows-msvc

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}
          path: target/x86_64-pc-windows-msvc/release/mach.exe
          if-no-files-found: error
          retention-days: 1

  windows-arm64:
    runs-on: windows-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v3

      - name: Build
        run: |
          rustup target add aarch64-pc-windows-msvc
          cargo build --release --target aarch64-pc-windows-msvc

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}
          path: target/aarch64-pc-windows-msvc/release/mach.exe
          if-no-files-found: error
          retention-days: 1

#   publish-github-release:
#     runs-on: ubuntu-latest
#     needs: [linux-amd64, linux-arm64, macos-amd64, macos-arm64, windows-amd64, windows-arm64]
#     steps:
#       - uses: actions/checkout@v3

#       - uses: actions/download-artifact@v3
#         with:
#           path: target

#       - name: Create Github Release
#         run: |
#           TAG="$(date -u +"v%Y.%m.%d.%H%M").${GITHUB_SHA::4}"

#           echo "Tag: ${TAG}"

#           gh release create $TAG --draft --notes "Automatically built binaries"

#           cd target

#           for DIR_NAME in * ; do
#               cd $DIR_NAME
#               chmod -R +x .
#               tar -czvf $DIR_NAME.tar.gz *
#               gh release upload $TAG $DIR_NAME.tar.gz
#               cd ..
#           done

#           gh release edit $TAG --draft=false
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
