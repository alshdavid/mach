name: Release

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

on: 
  push:
    branches:
      - "main"
      - "develop"

jobs:
  integration-tests:
    name: "üß™ Integration Tests"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-just
      - uses: ./.github/actions/setup-nodejs
      - uses: ./.github/actions/setup-rust
      - uses: ./.github/actions/build-mach
        with: { profile: debug }
      - name: "Integration tests"
        run: |
          source .github/actions/setup-env/setup-env.bash
          just integration-tests

  build:
    strategy:
      matrix:
        config:
          - name: üê• Linux AMD64
            os: linux
            arch: amd64
            runner: ubuntu-latest
          - name: üê• Linux ARM64
            os: linux
            arch: arm64
            runner: ubuntu-latest
          - name: üçé MacOS AMD64
            os: macos
            arch: amd64
            runner: macos-13
          - name: üçé MacOS AMD64
            os: macos
            arch: arm64
            runner: macos-14
          - name: üü¶ Windows AMD64
            os: windows
            arch: amd64
            runner: windows-latest
          - name: üü¶ Windows ARM64
            os: windows
            arch: arm64
            runner: windows-latest
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.runner }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-just
      - uses: ./.github/actions/setup-nodejs
      - uses: ./.github/actions/setup-rust
      - uses: ./.github/actions/setup-env
      - uses: ./.github/actions/build-mach
        with: 
          os: "${{ matrix.config.os }}"
          arch: "${{ matrix.config.arch }}"
      - uses: actions/upload-artifact@v4
        with:
          name: mach-${{ matrix.config.os }}-${{ matrix.config.arch }}
          path: ${{ github.workspace }}/artifacts/**/*
          if-no-files-found: error
          retention-days: 1

  npm-package:
    name: "üì¶ NPM"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-just
      - uses: ./.github/actions/setup-nodejs
      - uses: ./.github/actions/setup-rust
      - uses: ./.github/actions/setup-env
      - uses: ./.github/actions/build-npm
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}
          path: ${{ github.workspace }}/artifacts/**/*
          if-no-files-found: error
          retention-days: 1

  # publish-github-release:
  #   name: "üîÅ Github Release"
  #   runs-on: ubuntu-latest
  #   needs: [test-integration, vars, npm-package, linux-amd64, linux-arm64, macos-amd64, macos-arm64, windows-amd64, windows-arm64]
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/download-artifact@v4
  #       with:
  #         path: ${{ github.workspace }}/artifacts
  #     - name: Publish` Github Release
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         MACH_VERSION: ${{ needs.vars.outputs.NEXT_MACH_VERSION }}
  #         BRANCH_NAME: ${{ needs.vars.outputs.BRANCH_NAME }}
  #       run: bash .github/workflows/release/publish-github-release.bash

  publish-npm-package:
    name: "üîÅ Publish: NPM"
    runs-on: ubuntu-latest
    needs: [integration-tests, npm-package, build]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-nodejs
      - uses: actions/download-artifact@v4
        with:
          path: ${{ github.workspace }}/artifacts
      - name: Publish NPM Package
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          BRANCH_NAME: ${{ needs.vars.outputs.BRANCH_NAME }}
        run: bash .github/workflows/release/publish-npm-package.bash

  # publish-crate:
  #   name: "üîÅ Publish: Crates.io"
  #   runs-on: ubuntu-latest
  #   needs: [test-integration, vars, npm-package, linux-amd64, linux-arm64, macos-amd64, macos-arm64, windows-amd64, windows-arm64]
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/download-artifact@v4
  #       with:
  #         path: ${{ github.workspace }}/artifacts
  #     - name: Publish Crate
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         MACH_VERSION: ${{ needs.vars.outputs.NEXT_MACH_VERSION }}
  #         CRATES_IO_API_TOKEN: ${{ secrets.CRATES_IO_API_TOKEN }}
  #       run: bash .github/workflows/release/publish-crate.bash
