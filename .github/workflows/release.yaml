name: Release

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

on: 
  push:
    branches:
      - "main"
      - "develop"

jobs:
  vars:
    name: "üß† Generate Variables"
    runs-on: ubuntu-latest
    outputs:
      BRANCH_NAME: ${{ steps.step1.outputs.BRANCH_NAME }}
      NPM_TAG: ${{ steps.step1.outputs.NPM_TAG }}
      NEXT_MACH_VERSION: ${{ steps.step1.outputs.NEXT_MACH_VERSION }}
    steps:
      - uses: actions/checkout@v4
      - id: step1
        run: bash .github/workflows/release/generate-variables.bash

  test-integration:
    name: "üß™ Integration Tests"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup
      - { name: "Build", run: "source .github/workflows/platform/unix/setup-env.bash && profile=release just build" }
      - { name: "Integration tests", run: "source .github/workflows/platform/unix/setup-env.bash && just integration-tests" }

  linux-amd64:
    name: "üê• Linux AMD64"
    runs-on: ubuntu-latest
    needs: [vars]
    steps:
      - uses: actions/checkout@v4
      - env:
          MACH_VERSION: ${{ needs.vars.outputs.NEXT_MACH_VERSION }}
          profile: release
          os: linux
          arch: amd64
        run: bash .github/workflows/release/linux-amd64.bash

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}.tar.gz
          path: ${{ github.workspace }}/artifacts/**/*
          if-no-files-found: error
          retention-days: 1

  linux-arm64:
    name: "üê• Linux ARM64"
    runs-on: ubuntu-latest
    needs: [vars]
    steps:
      - uses: actions/checkout@v4
      - env:
          MACH_VERSION: ${{ needs.vars.outputs.NEXT_MACH_VERSION }}
          profile: release
          os: linux
          arch: arm64
        run: bash .github/workflows/release/linux-arm64.bash
      
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}.tar.gz
          path: ${{ github.workspace }}/artifacts/**/*
          if-no-files-found: error
          retention-days: 1

  macos-amd64:
    name: "üçé MacOS AMD64"
    runs-on: macos-13
    needs: [vars]
    steps:
      - uses: actions/checkout@v4
      - env:
          MACH_VERSION: ${{ needs.vars.outputs.NEXT_MACH_VERSION }}
          profile: release
          os: macos
          arch: amd64
        run: bash .github/workflows/release/macos-amd64.bash

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}.tar.gz
          path: ${{ github.workspace }}/artifacts/**/*
          if-no-files-found: error
          retention-days: 1
      
  macos-arm64:
    name: "üçé MacOS ARM64"
    runs-on: macos-14
    needs: [vars]
    steps:
      - uses: actions/checkout@v4
      - env:
          MACH_VERSION: ${{ needs.vars.outputs.NEXT_MACH_VERSION }}
          profile: release
          os: macos
          arch: arm64
        run: bash .github/workflows/release/macos-arm64.bash
      
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}.tar.gz
          path: ${{ github.workspace }}/artifacts/**/*
          if-no-files-found: error
          retention-days: 1

  windows-amd64:
    name: "üü¶ Windows AMD64"
    runs-on: windows-latest
    needs: [vars]
    steps:
      - uses: actions/checkout@v4
      - env:
          MACH_VERSION: ${{ needs.vars.outputs.NEXT_MACH_VERSION }}
          profile: release
          os: windows
          arch: amd64
        run: \& .github\workflows\release\windows-amd64.ps1

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}.tar.gz
          path: ${{ github.workspace }}/artifacts/**/*
          if-no-files-found: error
          retention-days: 1

  windows-arm64:
    name: "üü¶ Windows ARM64"
    runs-on: windows-latest
    needs: [vars]
    steps:
      - uses: actions/checkout@v4
      - env:
          MACH_VERSION: ${{ needs.vars.outputs.NEXT_MACH_VERSION }}
          profile: release
          os: windows
          arch: arm64
        run: \& .github\workflows\release\windows-arm64.ps1
      
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}.tar.gz
          path: ${{ github.workspace }}/artifacts/**/*
          if-no-files-found: error
          retention-days: 1

  npm-package:
    name: "üì¶ NPM"
    runs-on: ubuntu-latest
    needs: [vars]
    steps:
      - uses: actions/checkout@v4
      - env:
          MACH_VERSION: ${{ needs.vars.outputs.NEXT_MACH_VERSION }}
        run: bash .github/workflows/release/npm-package.bash

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}.tar.gz
          path: ${{ github.workspace }}/artifacts/**/*
          if-no-files-found: error
          retention-days: 1

  publish-github-release:
    name: "üîÅ Github Release"
    runs-on: ubuntu-latest
    needs: [test-integration, vars, npm-package, linux-amd64, linux-arm64, macos-amd64, macos-arm64, windows-amd64, windows-arm64]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          path: ${{ github.workspace }}/artifacts
      - name: Publish` Github Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MACH_VERSION: ${{ needs.vars.outputs.NEXT_MACH_VERSION }}
          BRANCH_NAME: ${{ needs.vars.outputs.BRANCH_NAME }}
        run: bash .github/workflows/release/publish-github-release.bash


  publish-npm-package:
    name: "üîÅ Publish: NPM"
    runs-on: ubuntu-latest
    needs: [test-integration, vars, npm-package, linux-amd64, linux-arm64, macos-amd64, macos-arm64, windows-amd64, windows-arm64]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          path: ${{ github.workspace }}/artifacts
      - name: Publish NPM Package
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          BRANCH_NAME: ${{ needs.vars.outputs.BRANCH_NAME }}
        run: bash .github/workflows/release/publish-npm-package.bash

  publish-crate:
    name: "üîÅ Publish: Crates.io"
    runs-on: ubuntu-latest
    needs: [test-integration, vars, npm-package, linux-amd64, linux-arm64, macos-amd64, macos-arm64, windows-amd64, windows-arm64]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          path: ${{ github.workspace }}/artifacts
      - name: Publish Crate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MACH_VERSION: ${{ needs.vars.outputs.NEXT_MACH_VERSION }}
          CRATES_IO_API_TOKEN: ${{ secrets.CRATES_IO_API_TOKEN }}
        run: bash .github/workflows/release/publish-crate.bash
