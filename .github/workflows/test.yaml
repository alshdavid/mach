name: New Publish

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

# on: 
#   workflow_dispatch:
#     inputs:
#       publish-npm:
#         description: 'Publish NPM'
#         required: true
#         default: false
#         type: boolean
#       publish-bin:
#         description: 'Publish Binaries'
#         required: true
#         default: false
#         type: boolean
#
# env:
#   PUBLISH_NPM: ${{ inputs.publish-npm }}
#   PUBLISH_BIN: ${{ inputs.publish-bin }}

on:
  push:
    branches:
      - main

env:
  PUBLISH_NPM: 'true'
  PUBLISH_BIN: 'true'

jobs:
  vars:
    name: Generate Variables
    runs-on: ubuntu-latest
    outputs:
      BRANCH_NAME: ${{ steps.step1.outputs.BRANCH_NAME }}
      NPM_TAG: ${{ steps.step1.outputs.NPM_TAG }}
      NEXT_NPM_VERSION: ${{ steps.step1.outputs.NEXT_NPM_VERSION }}
      NEXT_BIN_VERSION: ${{ steps.step1.outputs.NEXT_BIN_VERSION }}
    steps:
      - uses: actions/checkout@v4
      - id: step1
        run: |
          npm install -g pnpm && pnpm i
          
          export BRANCH_NAME=${GITHUB_REF##*/}

          export NPM_TAG=$BRANCH_NAME
          if [ $NPM_TAG = "main" ]; then
            export NPM_TAG="latest"
          fi

          if [ "$PUBLISH_NPM" = "true" ]; then
            NEXT_NPM_VERSION="$(node .github/scripts/ci/next-npm-version.mjs)"
            echo "NEXT_NPM_VERSION=$NEXT_NPM_VERSION" >> $GITHUB_OUTPUT
            echo NEXT_NPM_VERSION = $NEXT_NPM_VERSION
          fi

          if [ "$PUBLISH_BIN" = "true" ]; then
            NEXT_BIN_VERSION="$(node .github/scripts/ci/next-github-release.mjs)"
            echo "NEXT_BIN_VERSION=$NEXT_BIN_VERSION" >> $GITHUB_OUTPUT
            echo NEXT_BIN_VERSION = $NEXT_BIN_VERSION
          fi

          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "NPM_TAG=$NPM_TAG" >> $GITHUB_OUTPUT

  linux-amd64:
    runs-on: ubuntu-latest
    needs: [vars]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20 }

      - name: Setup Dependencies
        run: |
          npm install -g npm pnpm
          pnpm install
          rustup target add x86_64-unknown-linux-gnu

      - name: Build
        run: |
          node .github/scripts/run.mjs build --profile release-lto --target x86_64-unknown-linux-gnu
        env:
          BIN_VERSION: ${{ needs.vars.outputs.NEXT_BIN_VERSION }}

      - name: Package
        run: |
          cd target/linux-amd64
          mv release-lto mach
          tar -czvf mach-linux-amd64.tar.gz mach

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}.tar.gz
          path: target/linux-amd64/mach-linux-amd64.tar.gz
          if-no-files-found: error
          retention-days: 1

  build-npm-package:
    runs-on: ubuntu-latest
    needs: [vars]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20 }

      - name: Setup Dependencies
        run: |
          npm install -g npm pnpm
          pnpm install

      - name: Build
        run: |
          node .github/scripts/run.mjs build

      - name: Package
        run: |
          cd npm/mach
          echo $BRANCH_NAME > _scripts/postinstall/npm-bin-target.txt
          npm pack
          mv *.tgz ../../mach-npm.tgz

        env:
          NPM_VERSION: ${{ needs.vars.outputs.NEXT_NPM_VERSION }}
          BRANCH_NAME: ${{ needs.vars.outputs.BRANCH_NAME }}

      - uses: actions/upload-artifact@v4
        with:
          name: mach-npm.tgz
          path: mach-npm.tgz
          if-no-files-found: error
          retention-days: 1