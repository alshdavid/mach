name: Verify

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: 
      - 'main'
  pull_request:
    branches:
      - '*'

env:
  PUBLISH_NPM: "stub"
  PUBLISH_BIN: "stub"
  BIN_CODENAME: stub"
  BRANCH_NAME: "stub"
  NPM_TAG: "stub"
  NEXT_NPM_VERSION: "stub"
  NEXT_BIN_VERSION: "stub"

jobs:
  linux-amd64:
    name: "üê• Linux AMD64"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20 }
      - uses: arduino/setup-protoc@v3
        with: { repo-token: "${{ secrets.GITHUB_TOKEN }}" }

      - name: Setup Dependencies
        run: |
          sudo apt-get update
          npm install -g npm pnpm
          pnpm install
          rustup target add x86_64-unknown-linux-gnu

      - name: Build
        run: |
          node .github/scripts/run.mjs build --profile release-lto --target x86_64-unknown-linux-gnu
          cd target/linux-amd64
          mv release-lto mach
          XZ_OPT=-9 tar -Jcvf  mach-linux-amd64.tar.xz mach
          du -sh ./*

  linux-arm64:
    name: "üê• Linux ARM64"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20 }
      - uses: arduino/setup-protoc@v3
        with: { repo-token: "${{ secrets.GITHUB_TOKEN }}" }

      - name: Setup Dependencies
        run: |
          sudo apt-get update
          npm install -g npm pnpm
          pnpm install
          sudo apt-get install -y gcc-aarch64-linux-gnu build-essential
          rustup target add aarch64-unknown-linux-gnu
          aarch64-linux-gnu-gcc --version

      - name: Build
        run: |
          export CC=aarch64-linux-gnu-gcc
          node .github/scripts/run.mjs build --profile release-lto --target aarch64-unknown-linux-gnu
          cd target/linux-arm64
          mv release-lto mach
          XZ_OPT=-9 tar -Jcvf mach-linux-amd64.tar.xz mach
          du -sh ./*

  macos-amd64:
    name: "üçé MacOS AMD64"
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20 }
      - uses: arduino/setup-protoc@v3
        with: { repo-token: "${{ secrets.GITHUB_TOKEN }}" }

      - name: Setup Dependencies
        run: |
          npm install -g npm pnpm
          pnpm install
          rustup target add x86_64-apple-darwin

      - name: Build
        run: |
          node .github/scripts/run.mjs build --profile release-lto --target x86_64-apple-darwin
          cd target/macos-amd64
          mv release-lto mach
          XZ_OPT=-9 tar -Jcvf mach-macos-amd64.tar.xz mach
          du -sh ./*

  macos-arm64:
    name: "üçé MacOS ARM64"
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20 }
      - uses: arduino/setup-protoc@v3
        with: { repo-token: "${{ secrets.GITHUB_TOKEN }}" }

      - name: Setup Dependencies
        run: |
          npm install -g npm pnpm
          pnpm install
          rustup target add aarch64-apple-darwin

      - name: Build
        run: |
          node .github/scripts/run.mjs build --profile release-lto --target aarch64-apple-darwin
          cd target/macos-arm64
          mv release-lto mach
          XZ_OPT=-9 tar -Jcvf mach-macos-arm64.tar.xz mach
          du -sh ./*

  windows-amd64:
    name: "ü™ü Windows AMD64"
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20 }
      - uses: arduino/setup-protoc@v3
        with: { repo-token: "${{ secrets.GITHUB_TOKEN }}" }

      - name: Setup Dependencies
        run: |
          npm install -g npm pnpm
          pnpm install
          rustup target add x86_64-pc-windows-msvc
          choco install gnuwin32-coreutils.install

      - name: Build
        run: |
          node .github/scripts/run.mjs build --profile release-lto --target x86_64-pc-windows-msvc
          cd target/windows-amd64
          mv release-lto mach
          tar -czvf mach-windows-amd64.tar.gz mach
          du -sh .

  
  # Window ARM build is broken after adding Deno
  #
  windows-arm64:
    name: "ü™ü Windows ARM64 ‚ùå"
    runs-on: windows-latest
    steps:
      - run: |
          echo Skipping, no protobuf binaries for Windows on ARM
      # - uses: actions/checkout@v4
      # - uses: actions/setup-node@v4
      #   with: { node-version: 20 }
      # - uses: arduino/setup-protoc@v3
      #   with: { repo-token: "${{ secrets.GITHUB_TOKEN }}" }

      # - name: Setup Dependencies
      #   run: |
      #     npm install -g npm pnpm
      #     pnpm install
      #     rustup target add aarch64-pc-windows-msvc

      # - name: Build
      #   run: |
      #     node .github/scripts/run.mjs build --profile release-lto --target aarch64-pc-windows-msvc
      #     cd target/windows-arm64
      #     mv release-lto mach
      #     tar -czvf mach-windows-amd64.tar.gz mach
      #     du -sh .

  npm-package:
    name: "üì¶ NPM"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20 }
      - name: Build NPM
        run: |
          if [ "$PUBLISH_NPM" != "true" ]; then
            exit 0
          fi
          
          npm install -g npm pnpm
          pnpm install

          node .github/scripts/run.mjs build

          echo "NPM_VERSION = $NPM_VERSION"
          echo "NPM_BIN_TARGET = $NPM_BIN_TARGET"
          cd npm/mach
          node ./_scripts/prepack/prepack.mjs
          rm -rf ./_scripts/prepack
          npm pack
          mv *.tgz ../../mach-npm.tgz
